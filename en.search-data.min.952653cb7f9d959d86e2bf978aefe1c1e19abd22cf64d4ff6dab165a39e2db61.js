'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/docs/docs/mobile_printers/','title':"Mobile Printers",'content':"Mobile Printers The mobile app for Schoork supports printing hall passes and tardy slips from a mobile printer.\nSupported Printers If you have a mobile printer that is not on the list below, contact us.\n   Manufacturer Model     Zebra iMZ220   Zebra ZQ310    "});index.add({'id':1,'href':'/docs/docs/mobile_printers/zebra/','title':"Zebra",'content':"Zebra Mobile Printer Support Schoork supports printing on the Zebra iMZ220 and the ZQ310.\nNot Printing If your Zebra printer is not printing when you log a tardy,\n Make sure your printer is on Make sure your printer is linked to your phone via a bluetooth connection  Printing Gibberish If your Zebra mobile printer is printing an unintelligble mix of symbols and characters,\n Download the Zebra Printer Setup Utility from the App Store Open the app Click the menu icon in the top left corner Select your connected printer Click Device Language Click Set Device Lanaguage Change the Device Language to ZPL Click Apply (the app may set the device language to XML and ZPL, this is fine)  Your printer should now print the correctly formatted tardy slips.\nTL;DR The menu icon - three stacked, horizontal lines - is sometimes called a hamburger icon.  "});index.add({'id':2,'href':'/docs/docs/parents/appointments/','title':"Appointments",'content':"Appointments Parent Appointments is a module that allows parents to request an appointment with a staff member. When the parent requests the appointment, the staff member (and their supervisors) are notificed via email. Staff members will see a badge count in their sidebar of the number of incomplete appointments they have.\nWorkflow The diagram below shows the general workflow of a parent appointment in Schoork. In this diagram the orange boxes represent actions that a person needs to take, while the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD a[Parent requests appointment]:::work b[Email notification to user and supervisors]:::automated c[User holds appointment with parent]:::work d[User completes appointment in Schoork]:::work e[Email notification to parent and supervisors]:::automated a--b \u0026 c c--d \u0026 e classDef automated fill:#6bf classDef work fill:#f96 "});index.add({'id':3,'href':'/docs/docs/parents/concerns/','title':"Concerns",'content':"Concerns When a parent has a concern or request, they can submit a Parent Concern via Schoork. When the parent submits the concern, they must pick a staff member to submit the concern to. The staff member (and their supervisors) are notificed via email. Staff members will see a badge count in their sidebar of the number of incomplete concerns they have.\nWorkflow The diagram below shows the general workflow of a parent concern in Schoork. In this diagram the orange boxes represent actions that a person needs to take, while the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD a[Parent submits concern]:::work b[Email notification to user and supervisors]:::automated c[User addresses concern with parent]:::work d[User completes concern in Schoork]:::work e[Email notification to parent and supervisors]:::automated a--b \u0026 c c--d \u0026 e classDef automated fill:#6bf classDef work fill:#f96 "});index.add({'id':4,'href':'/docs/docs/students/attendance/','title':"Attendance",'content':"Attendance Workflow The diagram below shows the general workflow of attendance in Schoork. In this diagram the orange boxes represent actions that a person needs to take, while the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD a[User takes attendance]:::work b[Absent students added to Daily Absences]:::automated c[Section removed from Daily Absences]:::automated d[Administrator makes edits as needed]:::work e[User forgets to take attendance]:::work f[Reminder email]:::automated g[User or administrator takes attendance for section]:::work h[Calculates daily attendance rate]:::automated classDef automated fill:#6bf classDef work fill:#f96 a--b \u0026 c b--d e--f f--g d \u0026 g -- h Initial Setup In order to take attendance, you will need to assign students to sections and create attendance codes. Sections require periods and courses.\nSections Users with the Scheduling permission can add sections and assign students to them.\nMeeting days allows Schoork to send an automated attendance reminder in the afternoon to all teachers who haven\u0026rsquo;t taken attendance for a section that meets on that day. If a class meets on Tuesdays and Thursdays, then the teacher won\u0026rsquo;t receive the reminder on Mondays, Wednesdays, or Fridays.\nTo add students to a section, select the desired student or students (hold CTRL or âŒ˜ to select multiple students) and click the green arrow button. The red arrow button is used to remove students from the section.\nAttendance Codes Users with the Admin permission can add attendance codes from the Setup section in the sidebar. Each attendance code is asssigned a name and short name.\nAttendance codes are either absent codes (checked) or present codes (unchecked). Students assigned an absent code are listed on the Daily Absences page.\nYou can set the order that attendance codes appear when a user takes attendance by ordering them in the table on the main Attendance Codes page. Simply drag and drop them until they are ordered the way you want. We recommend that you have the most used code be the one listed first, since all students will default to this code when users take attendance.\nPeriods and Courses Periods and courses can be added by users with the Admin permission in the Setup section of the sidebar. Daily Absences The Daily Absences page lists the students who have been marked as absent for any section. Users with the Attendance permission can change the attendance code of a student by clicking on the blue code.\nThe page also lists the sections for which users have not yet taken attendance that also meet that day (see Initial Setup above). Users with the Attendance permission can take attendance for any section by clicking the blue button.\n"});index.add({'id':5,'href':'/docs/docs/students/hall_passes/','title':"Hall Passes",'content':"Hall Passes Hall passes are a mostly mobile feature. While hall passes might be easy to use with pre-printed tickets or scraps of paper and sticky notes, digital hall passes do afford the feature of automated data collection. With digital hall passes, you can which students are in the halls the most, how long students are out of class, and which teachers are allowing students to leave their classroom the most.\nHall passes are designed to be printed on a mobile printer (but certainly do not have to be).\nMobile Printers Currently Schoork supports printing on the Zebra iMZ220 (discontinued) and the ZQ310. If your school doesn\u0026rsquo;t have a mobile printer but would like to invest in some, we do recommend the ZQ310. It\u0026rsquo;s easy to use and already works with Schoork. If you have a mobile printer that\u0026rsquo;s not listed on our list of supported printers, please contact us.\nIf you are having trouble printing from your mobile printer (for intance, if it is printing gibberish), follow this guide.\nWorkflow The diagram below shows the general workflow of a hall pass in Schoork. In this diagram the orange boxes represent actions that a person needs to take, while the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD a[Staff member logs hall pass]:::work b[Prints hall pass from printer]:::automated c[Student leaves class and returns]:::work e[Hall pass added to all users' apps]:::automated f[Hall pass time counted down]:::automated g[\"Staff member clears hall pass (by swiping right to left)\"]:::work h[Hall pass cleared on all users' apps]:::automated a--b b--c \u0026 e \u0026 f c-- g \u0026 h classDef work fill:#f96 classDef automated fill:#6bf "});index.add({'id':6,'href':'/docs/docs/students/hot_list/','title':"Hot List",'content':"Hot List The Hot List is designed to be a quick and easy way to notify users in a school when a student has a particular consequence or needs to be pulled. The hot list is dsiplayed on users\u0026rsquo; dashboards and can be sent as an email.\nWorkflow The diagram below shows the general workflow of the hot list in Schoork. In this diagram the orange boxes represent actions that a person needs to take, while the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD a[Administrator completes referral]:::work b[Student added to hot list]:::automated c[Administrator adds student to hot list]:::work d[Hot list email created]:::automated e[Administrator sends email to staff]:::work f[Hot list displayed on dashboard]:::automated a--b c \u0026 b--d--e b \u0026 c--f classDef automated fill:#6bf classDef work fill:#f96 Privacy Concerns Due to FERPA rules, Schoork will not automate emails with students\u0026rsquo; personnally identifiable information. We encourage you to send students\u0026rsquo; PII over encrypted email only. We will, however, automate the creation of an email for you to send.  Consequences Consequences may be marked as Add to Hot List in order to increase automation. Any student receiving a consequence marked in this way will be automatically added to the hot list for all dates between the start and end date of the consequence.\nUsers with the Admin permission can add and edit consequences from the Setup section of the sidebar.\nMore information on adding consequences can be found on the Referrals page.\n"});index.add({'id':7,'href':'/docs/docs/students/referrals/','title':"Referrals",'content':"Referrals Workflow The diagram below shows the general workflow of a referral in Schoork. In this diagram the orange boxes represent actions that need to be taken and the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD id1[User submits referral]:::work id2[\"Email notification to administrator(s)\"]:::automated id3[Administrator completes referral]:::work id4[Email notification to user]:::automated id5[Added to Hot List]:::automated id6[Consequence Served entry created]:::automated id1--id2 \u0026 id3 id3--id4 \u0026 id5 \u0026 id6 classDef automated fill:#6bf classDef work fill:#f96 Initial Setup Referrals require a set of behaviors and and a set of consequences in order to be added and completed, respectively. Users with the Admin permission can add these.\nBehaviors Behaviors are assigned a regular name, a short name, and are defaulted to active. Only active behaviors may be selected when submitting a referral.Consequences Consequences are also assigned a regular and short name. The short name is used for some PDF reports.\nIf the Add to Hot List checkbox is checked, then any student receiving this consequence will be automatically added to the Hot List for all dates between the start and end date of the consequence.\nIf the Create Consequence Served Entry checkbox is checked, then any student receiving this consequence will be assigned a Consequence Served entry for the referral.\n Adding Referrals Users can only add referrals for students who attend schools to which the user is assigned. If a user cannot add a referral for a particular student who is in Schoork, it is likely that they don\u0026rsquo;t share a school in common.\nUsers with the Admin permission can add and remove users from schools.\nCompleting Referrals Users with the Discipline permission can complete referrals (these users can also add and complete referrals in one single step). To complete a referral, click the Edit button next to the referral on the referrals page.\nConsequences may be marked as HL (Hot List) and/or Serves (Consequence Served). See the above tab for Consequences for more information on these types of consequences.\nNotifications Some users may be notified when a referral is submitted and completed.\n When adding a referral, all users with the Discipline permission who are also assigned as admin users of a school will receive a notification of the referral via email. When completing a referral, the user who submitted the referral will receive an email notification that it has been completed.  "});index.add({'id':8,'href':'/docs/docs/students/tardy_slips/','title':"Tardy Slips",'content':"Tardy Slips Tardy slips are a mostly mobile feature. They are designed to be printed on a mobile printer when they are assigned.\nMobile Printers Currently Schoork supports printing on the Zebra iMZ220 (discontinued) and the ZQ310. If your school doesn\u0026rsquo;t have a mobile printer but would like to invest in some, we do recommend the ZQ310. It\u0026rsquo;s easy to use and already works with Schoork. If you have a mobile printer that\u0026rsquo;s not listed on our list of supported printers, please contact us.\nIf you are having trouble printing from your mobile printer (for intance, if it is printing gibberish), follow this guide.\nWorkflow The diagram below shows the general workflow of a tardy slip in Schoork. In this diagram the orange boxes represent actions that a person needs to take, while the blue boxes are tasks that Schoork automates.\n  mermaid.initialize({ flowchart: { useMaxWidth:true } });  graph TD a[Student is late to class]:::work g[Staff member inputs student's name]:::work b[Calculates tardy number and default consequence]:::automated c[Staff member inputs tardy for student]:::work d[Prints tardy slip]:::automated e[Student goes to class with slip]:::work f[Tardy logged in system]:::automated h[Added to Hot List]:::automated a--g--b--c--d \u0026 e \u0026 f \u0026 h classDef automated fill:#6bf classDef work fill:#f96 Initial Setup To make assigning consequences easier, we built a module called Tardy Consequences to allow organizations to set a default consequence for each tardy a student receives (although you can change the consequence while logging each individual tardy). Tardy consequences rely on Consequences to function, so at least one of these must exist in order to add a tardy consequence.\nUsers with the Admin permission can add these under Setup in the sidebar.\nConsequences Consequences are assigned a regular and short name. The short name is used for some PDF reports.\nIf the Add to Hot List checkbox is checked, then any student receiving this consequence will be automatically added to the Hot List for all dates between the start and end date of the consequence.\nThe Create Consequence Served Entry checkbox does not affect tardy slips.\nTardy Consequences Tardy Consequences are designed so that you don\u0026rsquo;t have to add a default consequence for each tardy number. Instead, they list the lowest tardy number they trigger at, and that consequence will trigger until another tardy consequence is listed.\nHere is an example in which a user has created three tardy consequences.\n   Consequence Lowest Tardy Count Trigger     Warning 1   Parent Contact 4   Lunch Detention 5    In this example, a student would receive a warning for tardies 1, 2, and 3. On tardy 4, the student would receive a parent contact. For tardies 5 and on, the student would recieve lunch detention.\n Resetting Tardies Users with the Admin permission can reset all tardy counts to 0. Tardies are still saved, but as a student accumulates more tardies, the count will start over with 1. This can be used at the end of a nine weeks, semester, or whenever you want.\n"});index.add({'id':9,'href':'/docs/docs/','title':"Docs",'content':""});index.add({'id':10,'href':'/docs/docs/parents/','title':"Parents",'content':"Parents Parents can sign up for a Schoork Parent account with their email address. From this account they can submit concerns, request appointments, and link to their children\u0026rsquo;s accounts.\nUsers with the Admin permission can view a listing of all parent accounts.\nParent accounts have a green navigation bar along the top of the screen.\n"});index.add({'id':11,'href':'/docs/docs/students/','title':"Students",'content':"Students Adding Students Schoork supports two main ways of adding students to the system:\n Online registration Automated upload from a student management system  Online Registration Schoork has an optional online registration component for districts who want to use it. The form allows your district to gather wanted information about a student one time and print it on as many forms as desired. Information, such as a student\u0026rsquo;s name, birthdate, grade, and school are collected once from the parent but printed on every single form. This is meant to decrease the amount of time it takes parents to complete the registration process for their child(ren) and can also be used to accomodate offsite registration.\nVerifcation In working with a school district in Mississippi, we found that it was highly valuable to have a parent complete the registration process with a staff member to ensure all information was correct and completed. We added a small module to flag students for different forms that had been signed (i.e. media release, internet and device usage, etc.).\nAutomated Upload Schoork also supports automated uploads from your original Student Management System using a variety of formats for transfer, including SFTP and API methods. We will work with you to streamline this process so you can set it up once and not think about it again. Removing Students Schoork will not allow you to delete students, however, you can mark them as inactive. This process can be automated if you are using the Automated Upload from your SMS (above) or can be done manually by users with the Scheduling permission.\nTL;DR We don\u0026rsquo;t allow you to remove or delete students because too many modules rely on an associated student (or set of students) to function. For instance, every office referral, IEP, MTSS folder, and counseling session is assigned to one or more students. Deleting a student would mean that you couldn\u0026rsquo;t access those referrals ever again.\nIn the example below, removing Student01 would mean that we would lose Referral01 and Referral02 and would not be able to access them for data or historical purpsoses.\n   mermaid.initialize({ flowchart: { useMaxWidth:true } });  classDiagram Student01 "});})();